name: System Tests (Self-Hosted)

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  system-tests:
    # Use self-hosted runner with pre-configured credentials
    runs-on: [self-hosted, Linux, onemount-testing, optimized]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
        cache: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install CLI dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r scripts/requirements-dev-cli.txt
    
    - name: Verify test credentials
      run: |
        # Check if credentials exist on the runner
        if [ ! -f "/opt/onemount-ci/.auth_tokens.json" ]; then
          echo "❌ Test credentials not found on self-hosted runner"
          echo "Expected: /opt/onemount-ci/.auth_tokens.json"
          exit 1
        fi
        
        # Copy to expected location
        mkdir -p ~/.onemount-tests
        cp /opt/onemount-ci/.auth_tokens.json ~/.onemount-tests/.auth_tokens.json
        chmod 600 ~/.onemount-tests/.auth_tokens.json
        
        echo "✅ Test credentials loaded from runner"
    
    - name: Build OneMount
      run: make build
    
    - name: Run all system tests
      run: |
        chmod +x scripts/dev
        # Create test results directory
        mkdir -p system-test-results
        # Run system tests with JSON output for reporting
        ./scripts/dev test system --category all --timeout 45m --json-output system-test-results/system-tests.json || true

    - name: Generate JUnit XML from system test results
      if: always()
      run: |
        # Install go-junit-report if not available
        go install github.com/jstemmer/go-junit-report/v2@latest
        # Convert JSON to JUnit XML if JSON file exists
        if [ -f system-test-results/system-tests.json ]; then
          cat system-test-results/system-tests.json | go-junit-report -set-exit-code > system-test-results/junit.xml
        else
          echo "No JSON test results found, creating empty JUnit report"
          cat > system-test-results/junit.xml << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="system-tests" tests="0" failures="0" time="0">
  </testsuite>
</testsuites>
EOF
        fi

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: system-test-results-self-hosted
        path: system-test-results/
        retention-days: 30

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: system-test-logs-self-hosted
        path: ~/.onemount-tests/logs/
        retention-days: 30

    - name: Publish system test results
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: System Tests (Self-Hosted)
        path: system-test-results/junit.xml
        reporter: java-junit
        fail-on-error: false
    
    - name: Cleanup
      if: always()
      run: |
        rm -rf ~/.onemount-tests/ || true
        # Unmount any remaining FUSE mounts
        for mount in $(mount | grep onemount | awk '{print $3}'); do
          fusermount3 -uz "$mount" 2>/dev/null || true
        done
