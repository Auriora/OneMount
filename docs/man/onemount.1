.\" Manpage for OneMount

.TH man 1 "May 2023" "1.0.0" "onemount man page"

.SH NAME
onemount \- A native Linux client for Microsoft OneDrive.


.SH SYNOPSIS
.BR onemount " [" \fIOPTION\fR "] <\fImountpoint\fR>


.SH DESCRIPTION
This program will mount your Microsoft OneDrive account as a native Linux filesystem at the
location specified by \fImountpoint\fR. OneMount is not a traditional sync client -
files are fetched on-demand and cached locally. Only files you actually use will
be downloaded, saving bandwidth and storage space.

Key features include:
.IP \(bu 2
On-demand file downloading with local caching
.IP \(bu 2
Offline mode with read access to previously cached files
.IP \(bu 2
Background synchronization of changes
.IP \(bu 2
File status indicators in file managers
.IP \(bu 2
Support for multiple OneDrive accounts
.IP \(bu 2
Low memory footprint and efficient operation

While offline, the filesystem will be read-only until
connectivity is re-established. Changes made while online are automatically
uploaded to OneDrive in the background.


.SH OPTIONS

.TP
.BR \-a , " \-\-auth-only"
Authenticate to OneDrive and then exit.

.TP
.BR \-f , " \-\-config-file"
A YAML-formatted configuration file used by onemount. Defaults to
"~/.config/onemount/config.yml".

.TP
.BR \-c , " \-\-cache\-dir " \fIdir
Change the default cache directory used by onemount. Will be created if the
path does not already exist. The \fIdir\fR argument specifies the location. 

.TP
.BR \-d , " \-\-debug"
Enable FUSE debug logging. This logs communication between onemount and the kernel.

.TP
.BR \-h , " \-\-help"
Displays a help message.

.TP
.BR \-l , " \-\-log "\fIlevel
Set logging level/verbosity. \fIlevel\fR can be one of: 
.BR fatal ", " error ", " warn ", " info ", " debug " or " trace " (default is " debug ")."

.TP
.BR \-n , " \-\-no\-browser"
This disables launching the built-in web browser during authentication. Follow
the instructions in the terminal to authenticate to OneDrive.

.TP
.BR \-v , " \-\-version"
Display program version.

.TP
.BR \-w , " \-\-wipe-cache"
Delete the existing onemount cache directory and then exit. Equivalent to
resetting the program.

.TP
.BR \-o , " \-\-log-output " \fIlocation
Set the output location for logs. \fIlocation\fR can be STDOUT, STDERR, or a file path.
Default is STDOUT.

.TP
.BR \-s , " \-\-sync-tree"
Sync the full directory tree to the local metadata store in the background.
This improves performance by pre-caching directory structure without blocking startup.

.TP
.BR \-i , " \-\-delta-interval " \fIseconds
Set the interval in seconds between delta query checks.
Default is 1 second. Set to 0 to use the default.

.TP
.BR \-e , " \-\-cache-expiration " \fIdays
Set the number of days after which files will be removed from the content cache.
Default is 30 days. Set to 0 to use the default.

.TP
.BR " \-\-stats"
Display statistics about the metadata, content caches, outstanding changes for upload, etc.
Does not start a mount point.

.TP
.BR " \-\-daemon"
Run onemount in daemon mode (detached from terminal).


.SH SYSTEM INTEGRATION
To start onemount automatically and ensure you always have access to your
files, you can start onemount as a systemd user service. In this example,
\fImountpoint\fR refers to where we want OneDrive to be mounted at (for
instance, ~/OneDrive). Mounting OneDrive via systemd allows multiple drives to
be mounted at the same time (as long as they use different mountpoints).


.TP
Create the mountpoint and determine the service name:
.nf
\fB
mkdir -p \fImountpoint\fR  
\fB
export SERVICE_NAME=$(systemd-escape --template onemount@.service --path \fImountpoint\fR)
\fR
.fi

.TP
Mount OneDrive:
.nf
\fB
systemctl --user daemon-reload
systemctl --user start $SERVICE_NAME
\fR
.fi

.TP
Mount OneDrive on login:
.nf
\fB
systemctl --user enable $SERVICE_NAME
\fR
.fi

.TP
Check onemount's logs:
.nf
\fB
journalctl --user -u $SERVICE_NAME
\fR
.fi


.SH TROUBLESHOOTING

Most errors can be solved by simply restarting the program. OneMount is
designed to recover cleanly from errors with minimal user intervention.

.TP
.B Common Issues and Solutions:

.TP
.B Filesystem hangs or becomes unresponsive
If the filesystem becomes unresponsive due to a deadlock or crash, you can cleanly unmount it with:
.br
\fBfusermount3 -uz $MOUNTPOINT\fR

.TP
.B Authentication problems
If you encounter authentication issues, try running:
.br
\fBonemount -a\fR
.br
This will force a new authentication process.

.TP
.B Slow performance or high CPU usage
Try enabling the sync-tree option to pre-cache directory structure:
.br
\fBonemount -s $MOUNTPOINT\fR

.TP
.B File status not updating
File status indicators may sometimes not update immediately. You can refresh the view in your file manager or run:
.br
\fBonemount --stats $MOUNTPOINT\fR
.br
to check the current status of files.

.TP
.B Offline mode issues
If you're having problems with offline mode, ensure you've accessed the files while online first so they can be cached.

.TP
.B Complete reset
To reset OneMount completely (wipe all local state), use:
.br
\fBonemount -w\fR

.TP
.B Checking logs
To view detailed logs for troubleshooting:
.br
\fBjournalctl --user -u onemount@.service --since today\fR
.br
Or set a more verbose logging level with \fB-l debug\fR or \fB-l trace\fR


.SH KNOWN ISSUES AND LIMITATIONS

.TP
.B Thumbnail Generation
Many file browsers (like GNOME's Nautilus) will attempt to automatically 
download all files within a directory in order to create thumbnail images.
This can cause increased network activity when browsing new directories.
After the initial thumbnail images have been created, they will persist between
filesystem restarts.

.TP
.B Symbolic Links
Microsoft does not support symbolic links on OneDrive. Attempting to create 
symbolic links within the filesystem returns ENOSYS (function not implemented).
This is a limitation of the OneDrive platform, not OneMount.

.TP
.B Recycle Bin
Microsoft does not expose the OneDrive Recycle Bin APIs. If you want to empty 
or restore items from the OneDrive Recycle Bin, you must do so through the 
OneDrive web UI. OneMount uses the native system trash/restore functionality 
independently of the OneDrive Recycle Bin.

.TP
.B Large Files
Files larger than 4GB may experience slower upload and download speeds due to 
chunked transfer requirements imposed by the Microsoft Graph API.

.TP
.B Special Files
Device files, named pipes, and other special file types are not supported by 
OneDrive and cannot be created in the filesystem.

.TP
.B File Name Restrictions
OneDrive has certain restrictions on file names that are more limiting than Linux.
Characters like '/', '\\', ':', '*', '?', '"', '<', '>', '|' are not allowed in file names.
File names cannot end with a space or period, and certain reserved names like "CON", "PRN", 
"AUX", etc. are not allowed.

.SH DISCLAIMER
This project is provided AS IS without warranty of any kind. While every effort 
has been made to ensure reliability and data integrity, users should maintain 
backups of important data. The developers are not responsible for any data loss 
or damage that may occur through the use of this software.


.SH SEE ALSO
.TP
.B Project Website:
https://github.com/auriora/OneMount
.TP
.B Documentation:
https://github.com/auriora/OneMount/tree/main/docs
.TP
.B Bug Reports:
https://github.com/auriora/OneMount/issues
.TP
.B Related Commands:
.BR fusermount3 (1),
.BR systemctl (1),
.BR journalctl (1)
.TP
.B Microsoft OneDrive:
https://onedrive.live.com
